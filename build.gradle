import org.apache.tools.ant.filters.ReplaceTokens

buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.8.0'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'

version = '1.0.0-SNAPSHOT'
group = 'com.aiyostudio.psextras'
archivesBaseName = 'PsExtras'

java.toolchain.languageVersion = JavaLanguageVersion.of(8)

minecraft {
    mappings channel: 'official', version: '1.16.5'
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.5-36.2.35'
    implementation fileTree(dir: './libs', includes: ['*.jar'])

    // Kotlin
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-common:1.8.0'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.8.0'

    implementation 'com.google.guava:guava:30.1.1-jre'

    // lombok
    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        include '**/*.yml'
        filter ReplaceTokens, tokens: ["version": project.property("version")]
        duplicatesStrategy DuplicatesStrategy.INCLUDE
    }
}

processResources {
    setFilteringCharset("UTF-8")
    expand project.properties
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

shadowJar {
    archiveBaseName.set(archivesBaseName)
    archiveVersion.set(version)

    relocate 'kotlin', 'kotlin180'

    exclude { FileTreeElement elem ->
        elem.file != null && !elem.file.toString().contains("PsExtras\\build")
    }
}

reobf {
    shadowJar {}
}

tasks.register('printVersion') {
    println version
}

tasks.build.dependsOn reobfShadowJar
jar.finalizedBy('reobfShadowJar')

